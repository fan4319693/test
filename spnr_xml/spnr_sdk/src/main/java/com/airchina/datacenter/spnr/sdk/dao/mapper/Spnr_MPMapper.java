package com.airchina.datacenter.spnr.sdk.dao.mapper;

import com.airchina.datacenter.spnr.sdk.dao.entity.Spnr_MPPo;
import java.util.List;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.type.JdbcType;

public interface Spnr_MPMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Spnr_MP
     *
     * @mbg.generated
     */
    @Insert({
        "insert into Spnr_MP (super_pnr_id, search_id, ",
        "product_number, booked_with, ",
        "booking_channel, booking_date, ",
        "booking_status, cancellation_date, ",
        "end_date, historic, ",
        "historic_id, last_modified, ",
        "master_product_number, primary_lang_id, ",
        "product_id, product_type, ",
        "product_type_code, start_date, ",
        "synchronised, tsbooking_status, ",
        "live_id, refundable, ",
        "replaced_by, agent_duty_code, ",
        "ersp_user_id, terminal_id, ",
        "requestor_id, company_code, ",
        "company_code_context, company_name, ",
        "supplier_notes)",
        "values (#{superPnrId,jdbcType=VARCHAR}, #{searchId,jdbcType=VARCHAR}, ",
        "#{productNumber,jdbcType=VARCHAR}, #{bookedWith,jdbcType=VARCHAR}, ",
        "#{bookingChannel,jdbcType=VARCHAR}, #{bookingDate,jdbcType=VARCHAR}, ",
        "#{bookingStatus,jdbcType=VARCHAR}, #{cancellationDate,jdbcType=VARCHAR}, ",
        "#{endDate,jdbcType=VARCHAR}, #{historic,jdbcType=VARCHAR}, ",
        "#{historicId,jdbcType=VARCHAR}, #{lastModified,jdbcType=VARCHAR}, ",
        "#{masterProductNumber,jdbcType=VARCHAR}, #{primaryLangId,jdbcType=VARCHAR}, ",
        "#{productId,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR}, ",
        "#{productTypeCode,jdbcType=VARCHAR}, #{startDate,jdbcType=VARCHAR}, ",
        "#{synchronised,jdbcType=VARCHAR}, #{tsbookingStatus,jdbcType=VARCHAR}, ",
        "#{liveId,jdbcType=VARCHAR}, #{refundable,jdbcType=VARCHAR}, ",
        "#{replacedBy,jdbcType=VARCHAR}, #{agentDutyCode,jdbcType=VARCHAR}, ",
        "#{erspUserId,jdbcType=VARCHAR}, #{terminalId,jdbcType=VARCHAR}, ",
        "#{requestorId,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR}, ",
        "#{companyCodeContext,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, ",
        "#{supplierNotes,jdbcType=VARCHAR})"
    })
    int insert(Spnr_MPPo row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Spnr_MP
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "super_pnr_id, search_id, product_number, booked_with, booking_channel, booking_date, ",
        "booking_status, cancellation_date, end_date, historic, historic_id, last_modified, ",
        "master_product_number, primary_lang_id, product_id, product_type, product_type_code, ",
        "start_date, synchronised, tsbooking_status, live_id, refundable, replaced_by, ",
        "agent_duty_code, ersp_user_id, terminal_id, requestor_id, company_code, company_code_context, ",
        "company_name, supplier_notes",
        "from Spnr_MP"
    })
    @Results({
        @Result(column="super_pnr_id", property="superPnrId", jdbcType=JdbcType.VARCHAR),
        @Result(column="search_id", property="searchId", jdbcType=JdbcType.VARCHAR),
        @Result(column="product_number", property="productNumber", jdbcType=JdbcType.VARCHAR),
        @Result(column="booked_with", property="bookedWith", jdbcType=JdbcType.VARCHAR),
        @Result(column="booking_channel", property="bookingChannel", jdbcType=JdbcType.VARCHAR),
        @Result(column="booking_date", property="bookingDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="booking_status", property="bookingStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="cancellation_date", property="cancellationDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="end_date", property="endDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="historic", property="historic", jdbcType=JdbcType.VARCHAR),
        @Result(column="historic_id", property="historicId", jdbcType=JdbcType.VARCHAR),
        @Result(column="last_modified", property="lastModified", jdbcType=JdbcType.VARCHAR),
        @Result(column="master_product_number", property="masterProductNumber", jdbcType=JdbcType.VARCHAR),
        @Result(column="primary_lang_id", property="primaryLangId", jdbcType=JdbcType.VARCHAR),
        @Result(column="product_id", property="productId", jdbcType=JdbcType.VARCHAR),
        @Result(column="product_type", property="productType", jdbcType=JdbcType.VARCHAR),
        @Result(column="product_type_code", property="productTypeCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="start_date", property="startDate", jdbcType=JdbcType.VARCHAR),
        @Result(column="synchronised", property="synchronised", jdbcType=JdbcType.VARCHAR),
        @Result(column="tsbooking_status", property="tsbookingStatus", jdbcType=JdbcType.VARCHAR),
        @Result(column="live_id", property="liveId", jdbcType=JdbcType.VARCHAR),
        @Result(column="refundable", property="refundable", jdbcType=JdbcType.VARCHAR),
        @Result(column="replaced_by", property="replacedBy", jdbcType=JdbcType.VARCHAR),
        @Result(column="agent_duty_code", property="agentDutyCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="ersp_user_id", property="erspUserId", jdbcType=JdbcType.VARCHAR),
        @Result(column="terminal_id", property="terminalId", jdbcType=JdbcType.VARCHAR),
        @Result(column="requestor_id", property="requestorId", jdbcType=JdbcType.VARCHAR),
        @Result(column="company_code", property="companyCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="company_code_context", property="companyCodeContext", jdbcType=JdbcType.VARCHAR),
        @Result(column="company_name", property="companyName", jdbcType=JdbcType.VARCHAR),
        @Result(column="supplier_notes", property="supplierNotes", jdbcType=JdbcType.VARCHAR)
    })
    List<Spnr_MPPo> selectAll();
}